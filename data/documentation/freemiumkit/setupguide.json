{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Adding-the-SDK","level":2,"text":"Adding the SDK","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Open your app project in Xcode.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In the “File” menu select “Add Package Dependencies…”","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"Setup-Add-Dependency"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Paste this to the top right text field and press “Add Package”:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"]}]}],"start":3,"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}],"type":"paragraph"}]}],"start":4,"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Choose-Package","type":"image"}],"type":"paragraph"},{"anchor":"Configuring-the-SDK","level":2,"text":"Configuring the SDK","type":"heading"},{"style":"tip","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t forget to "},{"type":"codeVoice","code":"import FreemiumKit"},{"type":"text","text":" for any of the below calls to build."}]}],"type":"aside"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Make sure your app’s Asset Catalog contains the ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.shared)","type":"codeVoice"},{"text":" to every scene in the app entry point. For example:","type":"text"}],"type":"paragraph"},{"code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"type":"codeListing","syntax":"swift"}]}],"type":"orderedList"},{"style":"tip","name":"Tip","content":[{"inlineContent":[{"text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call ","type":"text"},{"type":"codeVoice","code":".overrideForDebug"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.shared"},{"text":" within an ","type":"text"},{"type":"codeVoice","code":"#if DEBUG"},{"text":" check like this:","type":"text"}],"type":"paragraph"},{"code":["WindowGroup {","   MainView()","      .onAppear {","         #if DEBUG","         FreemiumKit.shared.overrideForDebug(purchasedTier: 1)","         #endif","      }","}",".environmentObject(FreemiumKit.shared)"],"type":"codeListing","syntax":"swift"}],"type":"aside"},{"anchor":"Showing-the-Paywalls","level":2,"text":"Showing the Paywalls","type":"heading"},{"identifier":"PaidViews","type":"video"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you and saves you a lot of boilerplate code. For example:"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ opens paywall if user has not purchased, else just like `Button`","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ exactly the same as above, but gives you full customizability","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift"},{"inlineContent":[{"text":"Both ","type":"text"},{"type":"codeVoice","code":"PaidFeatureButton"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"PaidFeatureView"},{"text":" accept an ","type":"text"},{"type":"codeVoice","code":"unlocksAtTier"},{"text":" parameter of type ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" (default: ","type":"text"},{"type":"codeVoice","code":"1"},{"text":") and a ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" parameter of type ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":" (default: ","type":"text"},{"type":"codeVoice","code":"true"},{"text":").","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If you don’t pass any of those parameters, the default behavior unlocks the feature only if tier 1 is purchased and shows a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the ","type":"text"},{"type":"codeVoice","code":".paywall(isPresented:)"},{"text":" modifier to your custom views where needed. For example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"],"type":"codeListing"},{"inlineContent":[{"text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" object as an ","type":"text"},{"type":"codeVoice","code":"@EnvironmentObject"},{"text":" and call ","type":"text"},{"type":"codeVoice","code":".purchasedTier"},{"text":" (or ","type":"text"},{"type":"codeVoice","code":".hasPurchased"},{"text":" if you only have one tier) like so:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"],"type":"codeListing"},{"inlineContent":[{"text":"If you want to show the paywall right upon appearance of a view, you should additionally check for the ","type":"text"},{"code":"purchasesLoaded","type":"codeVoice"},{"text":" property of the environment object like so:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject private var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onAppear {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier == nil {","            showPaywall = true","         }","      }","      .onChange(of: freemiumKit.purchasesLoaded) {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier == nil {","            showPaywall = true","         }","      }","   }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note that you can also access the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object from your models globally by calling "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":". But in your SwiftUI views you should use the "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" so your views get updated correctly."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"There’s also a ","type":"text"},{"code":"PaidStatusView","type":"codeVoice"},{"text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-PaidStatusView","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"code":".decorative","type":"codeVoice"},{"text":" style has multiple ","type":"text"},{"code":"icon","type":"codeVoice"},{"text":" parameter options and also accepts optional ","type":"text"},{"code":"foregroundColor","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"backgroundColor","type":"codeVoice"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"code":"PaidStatusView","type":"codeVoice"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you place it inside a "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" with "},{"type":"codeVoice","code":"Sections"},{"type":"text","text":", you might want to set the "},{"type":"codeVoice","code":"listRowBackground"},{"type":"text","text":" for a clean look like this:"}],"type":"paragraph"},{"code":["Form {","   Section {","      PaidStatusView(style: .decorative(icon: .laurel))","         .listRowBackground(Color.accentColor)","   }","   ","   \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"anchor":"SwiftUI-Previews","level":2,"text":"SwiftUI Previews","type":"heading"},{"inlineContent":[{"text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to ","type":"text"},{"type":"codeVoice","code":".environmentObject(FreemiumKit.preview)"},{"text":" in your preview code like so:","type":"text"}],"type":"paragraph"},{"code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"type":"codeVoice","code":"withOverridesForDebug(purchasedTier:)"},{"text":" function on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" and set your desired tier (set ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" for full access). The default ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}],"type":"paragraph"},{"code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Contact","level":2,"text":"Contact","type":"heading"},{"inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"identifier":"mailto:freemiumkit@fline.dev","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Legal","level":2,"text":"Legal","type":"heading"},{"inlineContent":[{"text":"Cihat Gündüz © 2024. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Privacy: No personal data is tracked on this site.","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/www.fline.dev\/imprint\/","type":"reference","isActive":true}],"type":"small"}]}],"identifier":{"url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide","interfaceLanguage":"swift"},"metadata":{"role":"article","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"roleHeading":"FreemiumKit","title":"SDK Setup Guide"},"sections":[],"abstract":[{"type":"text","text":"Learn how to set up your app for our paywalls and live push notifications."}],"references":{"Setup-Add-Dependency":{"identifier":"Setup-Add-Dependency","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Dependency.jpeg"}]},"FreemiumKit.png":{"identifier":"FreemiumKit.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}]},"Setup-Add-Package":{"identifier":"Setup-Add-Package","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Package.jpeg"}]},"doc://FreemiumKit/documentation/Index":{"abstract":[{"type":"text","text":"Simple In-App Purchases and Subscriptions for Apple Platforms:"},{"type":"text","text":" "},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}],"role":"collection","title":"FreemiumKit","url":"\/documentation\/index","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","type":"topic","identifier":"doc:\/\/FreemiumKit\/documentation\/Index"},"Setup-PaidStatusView":{"identifier":"Setup-PaidStatusView","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-PaidStatusView.jpeg"}]},"mailto:freemiumkit@fline.dev":{"title":"freemiumkit@fline.dev","url":"mailto:freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","titleInlineContent":[{"type":"text","text":"freemiumkit@fline.dev"}],"type":"link"},"PaidViews":{"poster":"PaidViews-Poster","identifier":"PaidViews","alt":null,"type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}]},"Setup-Choose-Package":{"identifier":"Setup-Choose-Package","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}]},"https://www.fline.dev/imprint/":{"title":"Imprint","url":"https:\/\/www.fline.dev\/imprint\/","identifier":"https:\/\/www.fline.dev\/imprint\/","titleInlineContent":[{"type":"text","text":"Imprint"}],"type":"link"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"title":"FAQs","role":"article","url":"\/documentation\/freemiumkit\/faqs","abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","images":[{"identifier":"FreemiumKit.png","type":"icon"}]},"PaidViews-Poster":{"identifier":"PaidViews-Poster","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}]}}}