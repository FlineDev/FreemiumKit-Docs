{"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"metadata":{"images":[{"identifier":"FreemiumKit.png","type":"icon"}],"title":"SDK Setup Guide","roleHeading":"FreemiumKit","role":"article"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Adding-the-SDK","text":"Adding the SDK","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Open your app project in Xcode.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"In the “File” menu select “Add Package Dependencies…”"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"Setup-Add-Dependency"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}],"type":"paragraph"},{"syntax":null,"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"type":"codeListing"}]}],"start":3,"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"Setup-Add-Package"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}]}]}],"start":4,"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Choose-Package","type":"image"}],"type":"paragraph"},{"level":2,"anchor":"Configuring-the-SDK","text":"Configuring the SDK","type":"heading"},{"name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"Don’t forget to ","type":"text"},{"code":"import FreemiumKit","type":"codeVoice"},{"text":" for any of the below calls to build.","type":"text"}]}],"style":"tip","type":"aside"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Make sure your app’s Asset Catalog contains the ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Add a call to ","type":"text"},{"type":"codeVoice","code":".environmentObject(FreemiumKit.shared)"},{"text":" to every scene in the app entry point. For example:","type":"text"}],"type":"paragraph"},{"code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"type":"codeListing","syntax":"swift"}]}],"type":"orderedList"},{"name":"Tip","content":[{"inlineContent":[{"text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call ","type":"text"},{"type":"codeVoice","code":".overrideForDebug"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.shared"},{"text":" within an ","type":"text"},{"type":"codeVoice","code":"#if DEBUG"},{"text":" check like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["WindowGroup {","   MainView()","      .onAppear {","         #if DEBUG","         FreemiumKit.shared.overrideForDebug(purchasedTier: 1)","         #endif","      }","}",".environmentObject(FreemiumKit.shared)"],"syntax":"swift"}],"style":"tip","type":"aside"},{"level":2,"anchor":"Understanding-Apples-Tier-System","text":"Understanding Apples Tier System","type":"heading"},{"inlineContent":[{"type":"text","text":"If your goal is to ship your app with any combination of Monthly, Yearly, and Lifetime purchases, you most likely only need one tier: Tier 1. Just pass "},{"code":"1","type":"codeVoice"},{"type":"text","text":" for the "},{"code":"purchasedTier","type":"codeVoice"},{"type":"text","text":" parameter everywhere – easy. Continue to the next section."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But if you want to support multiple levels of access to your app, like a combination of Monthly\/Yearly\/Lifetime for the ‘Pro’ level, another combination of Monthly\/Yearly\/Lifetime for the ‘Max’ level, and maybe another combination of Monthly\/Yearly\/Lifetime for the ‘Ultra’ level, that’s when you need to think about which value to pass to the "},{"code":"purchasedTier","type":"codeVoice"},{"type":"text","text":" parameter. Note that "},{"code":"1","type":"codeVoice"},{"type":"text","text":" always refers to the highest level. That’s how Apple has decided their tier system to work. Read their "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions"},{"type":"text","text":" to learn more."}],"type":"paragraph"},{"level":2,"anchor":"Showing-the-Paywalls","text":"Showing the Paywalls","type":"heading"},{"identifier":"PaidViews","type":"video"},{"items":[{"content":[{"inlineContent":[{"text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you and saves you a lot of boilerplate code. For example:","type":"text"}],"type":"paragraph"},{"code":["\/\/ opens paywall if user has not purchased, else just like `Button`","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ exactly the same as above, but gives you full customizability","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Both ","type":"text"},{"type":"codeVoice","code":"PaidFeatureButton"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"PaidFeatureView"},{"text":" accept an ","type":"text"},{"type":"codeVoice","code":"unlocksAtTier"},{"text":" parameter of type ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" (default: ","type":"text"},{"type":"codeVoice","code":"1"},{"text":") and a ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" parameter of type ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":" (default: ","type":"text"},{"type":"codeVoice","code":"true"},{"text":").","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If you don’t pass any of those parameters, the default behavior unlocks the feature only if tier 1 is purchased and shows a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the ","type":"text"},{"code":".paywall(isPresented:)","type":"codeVoice"},{"text":" modifier to your custom views where needed. For example:","type":"text"}]},{"type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" object as an "},{"code":"@EnvironmentObject","type":"codeVoice"},{"type":"text","text":" and call "},{"code":".purchasedTier","type":"codeVoice"},{"type":"text","text":" or "},{"code":".hasPurchased","type":"codeVoice"},{"type":"text","text":" if you only have one tier like so:"}]},{"type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to show the paywall upon appearance of a view if a user has not paid, you should first check that the "},{"code":"purchasesLoaded","type":"codeVoice"},{"type":"text","text":" property of "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":" – or else paying users might see the paywall, too. Since this is a common use case, our SDK ships with the "},{"code":".onPurchasesLoaded","type":"codeVoice"},{"type":"text","text":" view modifier which is guaranteed to be called exactly once (like "},{"code":".onAppear","type":"codeVoice"},{"type":"text","text":") but only when purchases are loaded:"}]},{"type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onPurchasesLoaded {","         if !FremiumKit.shared.hasPurchased {","            showPaywall = true","         }","      }","   }","}"],"syntax":"swift"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift","type":"codeListing"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-PaidStatusView","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"code":".decorative","type":"codeVoice"},{"text":" style has multiple ","type":"text"},{"code":"icon","type":"codeVoice"},{"text":" parameter options and also accepts optional ","type":"text"},{"code":"foregroundColor","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"backgroundColor","type":"codeVoice"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"code":"PaidStatusView","type":"codeVoice"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If you place it inside a ","type":"text"},{"code":"Form","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"Sections","type":"codeVoice"},{"text":", you might want to set the ","type":"text"},{"code":"listRowBackground","type":"codeVoice"},{"text":" for a clean look like this:","type":"text"}],"type":"paragraph"},{"code":["Form {","   Section {","      PaidStatusView(style: .decorative(icon: .laurel))","         .listRowBackground(Color.accentColor)","   }","   ","   \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"level":2,"anchor":"SwiftUI-Previews","text":"SwiftUI Previews","type":"heading"},{"inlineContent":[{"text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.preview)","type":"codeVoice"},{"text":" in your preview code like so:","type":"text"}],"type":"paragraph"},{"code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you want to simulate a specific paid state in your previews, you can call the "},{"type":"codeVoice","code":"withOverridesForDebug(purchasedTier:)"},{"type":"text","text":" function on "},{"type":"codeVoice","code":"FreemiumKit.preview"},{"type":"text","text":" and set your desired tier (set "},{"type":"codeVoice","code":"1"},{"type":"text","text":" for full access). The default "},{"type":"codeVoice","code":"FreemiumKit.preview"},{"type":"text","text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:"}],"type":"paragraph"},{"code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"],"syntax":"swift","type":"codeListing"},{"level":2,"anchor":"Contact","text":"Contact","type":"heading"},{"inlineContent":[{"type":"text","text":"Have questions or need support? Reach out to me at "},{"isActive":true,"type":"reference","identifier":"mailto:freemiumkit@fline.dev"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"anchor":"Legal","text":"Legal","type":"heading"},{"inlineContent":[{"type":"text","text":"Cihat Gündüz © 2024. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Privacy: No personal data is tracked on this site."},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.fline.dev\/imprint\/"}],"type":"small"}]}],"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"abstract":[{"type":"text","text":"Learn how to set up your app for our paywalls and live push notifications."}],"references":{"Setup-Add-Package":{"variants":[{"url":"\/images\/Setup-Add-Package.jpeg","traits":["1x","light"]}],"identifier":"Setup-Add-Package","alt":null,"type":"image"},"https://developer.apple.com/help/app-store-connect/manage-subscriptions/offer-auto-renewable-subscriptions":{"identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","url":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","title":"official docs","titleInlineContent":[{"text":"official docs","type":"text"}],"type":"link"},"Setup-Choose-Package":{"identifier":"Setup-Choose-Package","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}],"type":"image"},"PaidViews":{"variants":[{"url":"\/videos\/PaidViews.mp4","traits":["1x","light"]}],"identifier":"PaidViews","poster":"PaidViews-Poster","alt":null,"type":"video"},"mailto:freemiumkit@fline.dev":{"titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}],"title":"freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","type":"link","url":"mailto:freemiumkit@fline.dev"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","url":"\/documentation\/freemiumkit\/faqs","type":"topic","role":"article","kind":"article","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}],"title":"FAQs"},"Setup-Add-Dependency":{"variants":[{"url":"\/images\/Setup-Add-Dependency.jpeg","traits":["1x","light"]}],"identifier":"Setup-Add-Dependency","alt":null,"type":"image"},"doc://FreemiumKit/documentation/Index":{"identifier":"doc:\/\/FreemiumKit\/documentation\/Index","url":"\/documentation\/index","type":"topic","role":"collection","kind":"article","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"abstract":[{"text":"Simple In-App Purchases and Subscriptions for Apple Platforms:","type":"text"},{"text":" ","type":"text"},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}],"title":"FreemiumKit"},"FreemiumKit.png":{"variants":[{"url":"\/images\/FreemiumKit.png","traits":["1x","light"]}],"identifier":"FreemiumKit.png","alt":null,"type":"image"},"Setup-PaidStatusView":{"variants":[{"url":"\/images\/Setup-PaidStatusView.jpeg","traits":["1x","light"]}],"identifier":"Setup-PaidStatusView","alt":null,"type":"image"},"https://www.fline.dev/imprint/":{"titleInlineContent":[{"text":"Imprint","type":"text"}],"title":"Imprint","identifier":"https:\/\/www.fline.dev\/imprint\/","type":"link","url":"https:\/\/www.fline.dev\/imprint\/"},"PaidViews-Poster":{"variants":[{"url":"\/images\/PaidViews-Poster.jpeg","traits":["1x","light"]}],"identifier":"PaidViews-Poster","alt":null,"type":"image"}}}