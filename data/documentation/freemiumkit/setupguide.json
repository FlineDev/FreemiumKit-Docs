{"primaryContentSections":[{"content":[{"text":"Adding the SDK","level":2,"type":"heading","anchor":"Adding-the-SDK"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Open your app project in Xcode.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"In the “File” menu select “Add Package Dependencies…”"}],"type":"paragraph"}]}]},{"inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}],"type":"paragraph"},{"type":"orderedList","start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}]},{"type":"codeListing","code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"syntax":null}]}]},{"inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}],"type":"paragraph"},{"type":"orderedList","start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}]}]}]},{"inlineContent":[{"identifier":"Setup-Choose-Package","type":"image"}],"type":"paragraph"},{"text":"Configuring the SDK","level":2,"type":"heading","anchor":"Configuring-the-SDK"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Don’t forget to ","type":"text"},{"type":"codeVoice","code":"import FreemiumKit"},{"text":" for any of the below calls to build.","type":"text"}]}],"type":"aside","name":"Tip","style":"tip"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure your app’s Asset Catalog contains the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now."}]}]},{"content":[{"inlineContent":[{"text":"Add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.shared)","type":"codeVoice"},{"text":" to the root view of every scene in the app entry point. For example:","type":"text"}],"type":"paragraph"},{"code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","            .environmentObject(FreemiumKit.shared)","      }","   }","}"],"syntax":"swift","type":"codeListing"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call "},{"code":".overrideForDebug","type":"codeVoice"},{"type":"text","text":" on "},{"code":"FreemiumKit.shared","type":"codeVoice"},{"type":"text","text":" within an "},{"code":"#if DEBUG","type":"codeVoice"},{"type":"text","text":" check like this:"}]},{"type":"codeListing","syntax":"swift","code":["WindowGroup {","   MainView()","      .onAppear {","         #if DEBUG","         FreemiumKit.shared.overrideForDebug(purchasedTier: 1)","         #endif","      }","      .environmentObject(FreemiumKit.shared)","}"]}],"type":"aside","name":"Tip","style":"tip"},{"text":"Understanding Apples Tier System","level":2,"type":"heading","anchor":"Understanding-Apples-Tier-System"},{"inlineContent":[{"text":"If your goal is to ship your app with any combination of Monthly, Yearly, and Lifetime purchases, you most likely only need one tier: Tier 1. Just pass ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" for the ","type":"text"},{"code":"purchasedTier","type":"codeVoice"},{"text":" parameter everywhere – easy. Continue to the next section.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But if you want to support multiple levels of access to your app, like a combination of Monthly\/Yearly\/Lifetime for the ‘Pro’ level, another combination of Monthly\/Yearly\/Lifetime for the ‘Max’ level, and maybe another combination of Monthly\/Yearly\/Lifetime for the ‘Ultra’ level, that’s when you need to think about which value to pass to the "},{"type":"codeVoice","code":"purchasedTier"},{"type":"text","text":" parameter. Note that "},{"type":"codeVoice","code":"1"},{"type":"text","text":" always refers to the highest level. That’s how Apple has decided their tier system to work. Read their "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions"},{"type":"text","text":" to learn more."}],"type":"paragraph"},{"text":"Showing the Paywalls","level":2,"type":"heading","anchor":"Showing-the-Paywalls"},{"identifier":"PaidViews","type":"video"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you and saves you a lot of boilerplate code. For example:"}]},{"type":"codeListing","code":["\/\/ opens paywall if user has not purchased, else just like `Button`","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ exactly the same as above, but gives you full customizability","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you don’t pass any of those parameters, the default behavior unlocks the feature only if tier 1 is purchased and shows a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the ","type":"text"},{"type":"codeVoice","code":".paywall(isPresented:)"},{"text":" modifier to your custom views where needed. For example:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" object as an "},{"code":"@EnvironmentObject","type":"codeVoice"},{"type":"text","text":" and call "},{"code":".purchasedTier","type":"codeVoice"},{"type":"text","text":" or "},{"code":".hasPurchased","type":"codeVoice"},{"type":"text","text":" if you only have one tier like so:"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to show the paywall upon appearance of a view if a user has not paid, you should first check that the "},{"code":"purchasesLoaded","type":"codeVoice"},{"type":"text","text":" property of "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":" – or else paying users might see the paywall, too. Since this is a common use case, our SDK ships with the "},{"code":".onPurchasesLoaded","type":"codeVoice"},{"type":"text","text":" view modifier which is guaranteed to be called exactly once (like "},{"code":".onAppear","type":"codeVoice"},{"type":"text","text":") but only when purchases are loaded:"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onPurchasesLoaded {","         if !FremiumKit.shared.hasPurchased {","            showPaywall = true","         }","      }","   }","}"]}]},{"content":[{"inlineContent":[{"type":"text","text":"There’s also a "},{"code":"PaidStatusView","type":"codeVoice"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}],"type":"paragraph"},{"code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift","type":"codeListing"}]}]},{"inlineContent":[{"identifier":"Setup-PaidStatusView","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"code":".decorative","type":"codeVoice"},{"type":"text","text":" style has multiple "},{"code":"icon","type":"codeVoice"},{"type":"text","text":" parameter options and also accepts optional "},{"code":"foregroundColor","type":"codeVoice"},{"type":"text","text":" and "},{"code":"backgroundColor","type":"codeVoice"},{"type":"text","text":" parameters if you need to adjust the defaults. Note that the "},{"code":"PaidStatusView","type":"codeVoice"},{"type":"text","text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you place it inside a "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" with "},{"type":"codeVoice","code":"Sections"},{"type":"text","text":", you might want to set the "},{"type":"codeVoice","code":"listRowBackground"},{"type":"text","text":" for a clean look like this:"}],"type":"paragraph"},{"code":["Form {","   Section {","      PaidStatusView(style: .decorative(icon: .laurel))","         .listRowBackground(Color.accentColor)","   }","   ","   \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"text":"`@EnvironmentObject` vs `FreemiumKit.shared`","level":2,"type":"heading","anchor":"EnvironmentObject-vs-FreemiumKitshared"},{"inlineContent":[{"type":"text","text":"Sometimes we were using "},{"code":"FreemiumKit.shared","type":"codeVoice"},{"type":"text","text":" and sometimes "},{"code":"@EnvironmentObject var freemiumKit: FreemiumKit","type":"codeVoice"},{"type":"text","text":". They both actually refer to the exact same Singleton instance. So you might ask yourself: "},{"inlineContent":[{"inlineContent":[{"text":"When to use which?","type":"text"}],"type":"strong"}],"type":"emphasis"}],"type":"paragraph"},{"inlineContent":[{"text":"The answer is simple: Whenever you are in a ","type":"text"},{"inlineContent":[{"type":"text","text":"SwiftUI view"}],"type":"strong"},{"text":" and you want your view to ","type":"text"},{"inlineContent":[{"text":"automatically update","type":"text"}],"type":"strong"},{"text":" based on the purchase state, you should use ","type":"text"},{"type":"codeVoice","code":"@EnvironmentObject"},{"text":". This will ensure that the SwiftUI rendering picks up changes to the purchase state and refreshes your UI accordingly.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Everywhere else, you can use ","type":"text"},{"code":"FreemiumKit.shared","type":"codeVoice"},{"text":". For exmaple in your model layer, your user-intitiated functions, or even in one-off modifiers in your views like in ","type":"text"},{"code":"onAppear","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"SwiftUI Previews","level":2,"type":"heading","anchor":"SwiftUI-Previews"},{"inlineContent":[{"type":"text","text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.preview)"},{"type":"text","text":" in your preview code like so:"}],"type":"paragraph"},{"code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"type":"codeVoice","code":"withOverridesForDebug(purchasedTier:)"},{"text":" function on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" and set your desired tier (set ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" for full access). The default ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}],"type":"paragraph"},{"code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"],"type":"codeListing","syntax":"swift"},{"text":"Contact","level":2,"type":"heading","anchor":"Contact"},{"inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"isActive":true,"identifier":"mailto:freemiumkit@fline.dev","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Legal","level":2,"type":"heading","anchor":"Legal"},{"inlineContent":[{"type":"text","text":"Cihat Gündüz © 2024. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Privacy: No personal data is tracked on this site."},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/www.fline.dev\/imprint\/","isActive":true}],"type":"small"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"role":"article","roleHeading":"FreemiumKit","title":"SDK Setup Guide","images":[{"type":"icon","identifier":"FreemiumKit.png"}]},"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/MigrateFromPaid","doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"identifier":{"url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide","interfaceLanguage":"swift"},"sampleCodeDownload":{"action":{"overridingTitle":"Detailed Setup Video (17 min)","type":"reference","isActive":true,"identifier":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs"},"kind":"sampleDownload"},"references":{"mailto:freemiumkit@fline.dev":{"url":"mailto:freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}],"title":"freemiumkit@fline.dev","type":"link"},"Setup-Add-Package":{"identifier":"Setup-Add-Package","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Package.jpeg"}],"type":"image"},"doc://FreemiumKit/documentation/Index":{"title":"FreemiumKit","type":"topic","identifier":"doc:\/\/FreemiumKit\/documentation\/Index","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","role":"collection","abstract":[{"text":"Simple In-App Purchases and Subscriptions for Apple Platforms:","type":"text"},{"text":" ","type":"text"},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}],"url":"\/documentation\/index"},"Setup-PaidStatusView":{"identifier":"Setup-PaidStatusView","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-PaidStatusView.jpeg"}],"type":"image"},"doc://FreemiumKit/documentation/FreemiumKit/MigrateFromPaid":{"role":"article","abstract":[{"type":"text","text":"Learn how to migrate from a paid-up-front app to the Freemium model using FreemiumKit in 3 simple steps, while preserving access to your app for those who already purchased."}],"kind":"article","type":"topic","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"title":"Paid to Freemium Migration Guide","url":"\/documentation\/freemiumkit\/migratefrompaid","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/MigrateFromPaid"},"Setup-Choose-Package":{"identifier":"Setup-Choose-Package","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}],"type":"image"},"https://www.youtube.com/watch?v=6JxwA3WieHs":{"url":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","identifier":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","checksum":null,"type":"download"},"FreemiumKit.png":{"identifier":"FreemiumKit.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}],"type":"image"},"Setup-Add-Dependency":{"identifier":"Setup-Add-Dependency","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Dependency.jpeg"}],"type":"image"},"PaidViews":{"identifier":"PaidViews","alt":null,"poster":"PaidViews-Poster","variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}],"type":"video"},"https://www.fline.dev/imprint/":{"url":"https:\/\/www.fline.dev\/imprint\/","identifier":"https:\/\/www.fline.dev\/imprint\/","titleInlineContent":[{"text":"Imprint","type":"text"}],"title":"Imprint","type":"link"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"title":"FAQs","type":"topic","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","role":"article","abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}],"url":"\/documentation\/freemiumkit\/faqs"},"https://developer.apple.com/help/app-store-connect/manage-subscriptions/offer-auto-renewable-subscriptions":{"url":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","titleInlineContent":[{"text":"official docs","type":"text"}],"title":"official docs","type":"link"},"PaidViews-Poster":{"identifier":"PaidViews-Poster","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"type":"image"}}}