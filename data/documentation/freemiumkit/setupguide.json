{"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Adding the SDK","anchor":"Adding-the-SDK"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Open your app project in Xcode."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the “File” menu select “Add Package Dependencies…”"}]}]}]},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}]},{"syntax":null,"type":"codeListing","code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"]}]}],"start":3},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}],"type":"paragraph"}]}],"start":4},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Choose-Package","type":"image"}]},{"level":2,"type":"heading","text":"Configuring the SDK","anchor":"Configuring-the-SDK"},{"name":"Tip","style":"tip","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Don’t forget to ","type":"text"},{"code":"import FreemiumKit","type":"codeVoice"},{"text":" for any of the below calls to build.","type":"text"}]}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Make sure your app’s Asset Catalog contains the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.shared)"},{"type":"text","text":" to every scene in the app entry point. For example:"}],"type":"paragraph"},{"code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"syntax":"swift","type":"codeListing"}]}]},{"name":"Tip","style":"tip","type":"aside","content":[{"inlineContent":[{"type":"text","text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call "},{"type":"codeVoice","code":".withOverridesForDebug(purchasedTier: 1)"},{"type":"text","text":" on "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":" within an "},{"type":"codeVoice","code":"#if DEBUG"},{"type":"text","text":" check."}],"type":"paragraph"}]},{"level":2,"type":"heading","text":"Showing the Paywalls","anchor":"Showing-the-Paywalls"},{"identifier":"PaidViews","type":"video"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you. For example:","type":"text"}],"type":"paragraph"},{"code":["\/\/ opens paywall if user has not purchased, else works like a normal (stylable) button","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ this one behaves exactly the same as the one above, but gives you more flexibility to change the unlocked\/locked views","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Both "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" and "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":" accept an "},{"type":"codeVoice","code":"unlocksAtTier"},{"type":"text","text":" parameter of type "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" (default: "},{"type":"codeVoice","code":"1"},{"type":"text","text":") and a "},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"type":"text","text":" parameter of type "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" (default: "},{"type":"codeVoice","code":"true"},{"type":"text","text":"). This leads to a default behavior of unlocking the feature only if tier 1 is purchased and showing a paywall on press if tier 1 is not yet purchased. If "},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"type":"text","text":" is set to "},{"type":"codeVoice","code":"false"},{"type":"text","text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"type":"codeVoice","code":".paywall(isPresented:)"},{"type":"text","text":" modifier to your custom views where needed. For example:"}],"type":"paragraph"},{"code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the ","type":"text"},{"code":"FreemiumKit","type":"codeVoice"},{"text":" object as an ","type":"text"},{"code":"@EnvironmentObject","type":"codeVoice"},{"text":" and call ","type":"text"},{"code":".purchasedTier","type":"codeVoice"},{"text":" (or ","type":"text"},{"code":".hasPurchased","type":"codeVoice"},{"text":" if you only have one tier) like so:","type":"text"}],"type":"paragraph"},{"code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you want to show the paywall right upon appearance of a view, you should additionally check for the ","type":"text"},{"code":"purchasesLoaded","type":"codeVoice"},{"text":" property of the environment object like so:","type":"text"}],"type":"paragraph"},{"code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject private var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onAppear {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier == nil {","            showPaywall = true","         }","      }","      .onChange(of: freemiumKit.purchasesLoaded) {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier == nil {","            showPaywall = true","         }","      }","   }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Note that you can also access the ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" object from your models globally by calling ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.shared"},{"text":". But in your SwiftUI views you should use the ","type":"text"},{"type":"codeVoice","code":"@EnvironmentObject"},{"text":" so your views get updated correctly.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"type":"codeListing","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift"}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Setup-PaidStatusView"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".decorative"},{"text":" style has multiple ","type":"text"},{"type":"codeVoice","code":"icon"},{"text":" parameter options and also accepts optional ","type":"text"},{"type":"codeVoice","code":"foregroundColor"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"backgroundColor"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"type":"codeVoice","code":"PaidStatusView"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}]},{"level":2,"type":"heading","text":"SwiftUI Previews","anchor":"SwiftUI-Previews"},{"type":"paragraph","inlineContent":[{"text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.preview)","type":"codeVoice"},{"text":" in your preview code like so:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"]},{"type":"paragraph","inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"code":"withOverridesForDebug(purchasedTier:)","type":"codeVoice"},{"text":" function on ","type":"text"},{"code":"FreemiumKit.preview","type":"codeVoice"},{"text":" and set your desired tier (set ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" for full access). The default ","type":"text"},{"code":"FreemiumKit.preview","type":"codeVoice"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"]},{"level":2,"type":"heading","text":"Contact","anchor":"Contact"},{"type":"paragraph","inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"identifier":"mailto:freemiumkit@fline.dev","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"level":2,"type":"heading","text":"Legal","anchor":"Legal"},{"type":"small","inlineContent":[{"type":"text","text":"Cihat Gündüz © 2024. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Privacy: No personal data is tracked on this site."},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.fline.dev\/imprint\/"}]}],"kind":"content"}],"abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"kind":"article","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"images":[{"type":"icon","identifier":"FreemiumKit.png"}],"title":"SDK Setup Guide","roleHeading":"FreemiumKit","role":"article"},"references":{"PaidViews":{"poster":"PaidViews-Poster","type":"video","alt":null,"variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}],"identifier":"PaidViews"},"mailto:freemiumkit@fline.dev":{"titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}],"type":"link","url":"mailto:freemiumkit@fline.dev","title":"freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev"},"FreemiumKit.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}],"identifier":"FreemiumKit.png"},"Setup-Add-Dependency":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Dependency.jpeg"}],"identifier":"Setup-Add-Dependency"},"PaidViews-Poster":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"identifier":"PaidViews-Poster"},"https://www.fline.dev/imprint/":{"titleInlineContent":[{"text":"Imprint","type":"text"}],"type":"link","url":"https:\/\/www.fline.dev\/imprint\/","title":"Imprint","identifier":"https:\/\/www.fline.dev\/imprint\/"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","role":"article","abstract":[{"type":"text","text":"The most frequently asked questions about FreemiumKit."}],"type":"topic","url":"\/documentation\/freemiumkit\/faqs","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","title":"FAQs"},"Setup-PaidStatusView":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-PaidStatusView.jpeg"}],"identifier":"Setup-PaidStatusView"},"doc://FreemiumKit/documentation/Index":{"role":"collection","url":"\/documentation\/index","identifier":"doc:\/\/FreemiumKit\/documentation\/Index","kind":"article","abstract":[{"type":"text","text":"Simple In-App Purchases and Subscriptions for Apple Platforms:"},{"type":"text","text":" "},{"type":"text","text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more."}],"type":"topic","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"title":"FreemiumKit"},"Setup-Add-Package":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Package.jpeg"}],"identifier":"Setup-Add-Package"},"Setup-Choose-Package":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}],"identifier":"Setup-Choose-Package"}}}