{"kind":"article","hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"primaryContentSections":[{"content":[{"type":"heading","text":"Adding the SDK","anchor":"Adding-the-SDK","level":2},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your app project in Xcode."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the “File” menu select “Add Package Dependencies…”"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/ TODO: add screenshot"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}],"type":"paragraph"},{"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"type":"codeListing","syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"During the current Beta phase, you need to specify the ","type":"text"},{"type":"codeVoice","code":"main"},{"text":" branch for it to work.","type":"text"}]}],"type":"aside","name":"Warning","style":"warning"},{"inlineContent":[{"text":"\/\/ TODO: add screenshot","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/ TODO: add screenshot"}]}]}]},{"type":"heading","text":"Configuring the SDK","anchor":"Configuring-the-SDK","level":2},{"type":"aside","name":"Tip","style":"tip","content":[{"type":"paragraph","inlineContent":[{"text":"Don’t forget to ","type":"text"},{"type":"codeVoice","code":"import FreemiumKit"},{"text":" for any of the below calls to build.","type":"text"}]}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Make sure your app’s Asset Catalog contains the ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" data set from the “Setup” tab for your app in FreemiumKit. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Add a call to ","type":"text"},{"type":"codeVoice","code":".environmentObject(FreemiumKit.shared)"},{"text":" to every scene in the app entry point. For example:","type":"text"}],"type":"paragraph"},{"code":["@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"syntax":"swift","type":"codeListing"}]}]},{"type":"heading","text":"Showing the Paywalls","anchor":"Showing-the-Paywalls","level":2},{"type":"video","identifier":"PaidViews"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"code":"PaidFeatureButton","type":"codeVoice"},{"type":"text","text":" or "},{"code":"PaidFeatureView","type":"codeVoice"},{"type":"text","text":". For example:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ opens paywall if user has not purchased, else works like a normal (stylable) button","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ this one behaves exactly the same as the one above, but gives you more flexibility to change the unlocked\/locked views","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"]},{"type":"paragraph","inlineContent":[{"text":"Note that both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":"). This leads to a default behavior of unlocking the feature only if tier 1 is purchased and showing a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the ","type":"text"},{"code":".paywall(isPresented:)","type":"codeVoice"},{"text":" modifier to your custom views where needed. For example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         self.showPaywall = true","      }","      .paywall(isPresent: self.$showPaywall)","   }","}"]},{"inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object as an "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" and call "},{"type":"codeVoice","code":".purchasedTier"},{"type":"text","text":" on it like so:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if self.freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            self.showPaywall = true","         }","         .paywall(isPresent: self.$showPaywall)","      }","   }","}"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"type":"codeListing","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/ TODO: add screenshot of both styles"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".decorative"},{"text":" style has multiple ","type":"text"},{"type":"codeVoice","code":"icon"},{"text":" parameter options and also accepts optional ","type":"text"},{"type":"codeVoice","code":"foregroundColor"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"backgroundColor"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"type":"codeVoice","code":"PaidStatusView"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}]}]}]},{"type":"heading","text":"SwiftUI Previews","anchor":"SwiftUI-Previews","level":2},{"type":"paragraph","inlineContent":[{"text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.preview)","type":"codeVoice"},{"text":" in your preview code like so:","type":"text"}]},{"type":"codeListing","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"type":"codeVoice","code":"withDebugOverrides(purchasedTier:)"},{"text":" function on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" and set your desired tier (set ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" for full access). The default ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}]},{"type":"codeListing","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withDebugOverrides(purchasedTier: 1))","}"],"syntax":"swift"},{"type":"heading","text":"Contact","anchor":"Contact","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Have questions or need support? Reach out to me at "},{"isActive":true,"identifier":"mailto:freemiumkit@fline.dev","type":"reference"},{"type":"text","text":"."}]},{"type":"heading","text":"Legal","anchor":"Legal","level":2},{"type":"small","inlineContent":[{"text":"Cihat Gündüz © 2024. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Privacy: No personal data is tracked on this site.","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/www.fline.dev\/imprint\/","isActive":true,"type":"reference"}]}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"images":[{"type":"icon","identifier":"FreemiumKit.png"}],"roleHeading":"FreemiumKit","title":"SDK Setup Guide","role":"article"},"references":{"mailto:freemiumkit@fline.dev":{"title":"freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","titleInlineContent":[{"type":"text","text":"freemiumkit@fline.dev"}],"type":"link","url":"mailto:freemiumkit@fline.dev"},"PaidViews-Poster":{"type":"image","identifier":"PaidViews-Poster","variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"alt":null},"PaidViews":{"type":"video","identifier":"PaidViews","variants":[{"url":"\/videos\/PaidViews.mp4","traits":["1x","light"]}],"alt":null,"poster":"PaidViews-Poster"},"doc://FreemiumKit/documentation/Index":{"title":"FreemiumKit","abstract":[{"text":"Simple In-App Purchases and Subscriptions for Apple Platforms:","type":"text"},{"text":" ","type":"text"},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}],"kind":"article","type":"topic","url":"\/documentation\/index","role":"collection","identifier":"doc:\/\/FreemiumKit\/documentation\/Index","images":[{"identifier":"FreemiumKit.png","type":"icon"}]},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"title":"FAQs","abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}],"kind":"article","type":"topic","url":"\/documentation\/freemiumkit\/faqs","role":"article","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","images":[{"identifier":"FreemiumKit.png","type":"icon"}]},"FreemiumKit.png":{"type":"image","identifier":"FreemiumKit.png","alt":null,"variants":[{"url":"\/images\/FreemiumKit.png","traits":["1x","light"]}]},"https://www.fline.dev/imprint/":{"type":"link","identifier":"https:\/\/www.fline.dev\/imprint\/","title":"Imprint","url":"https:\/\/www.fline.dev\/imprint\/","titleInlineContent":[{"type":"text","text":"Imprint"}]}}}