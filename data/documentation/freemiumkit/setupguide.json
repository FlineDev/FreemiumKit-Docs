{"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"SDK Setup Guide","roleHeading":"FreemiumKit","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"role":"article"},"primaryContentSections":[{"kind":"content","content":[{"text":"Adding the SDK","type":"heading","level":2,"anchor":"Adding-the-SDK"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Open your app project in Xcode."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the “File” menu select “Add Package Dependencies…”","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}],"type":"paragraph"},{"syntax":null,"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"type":"codeListing"}]}],"start":3},{"inlineContent":[{"type":"image","identifier":"Setup-Add-Package"}],"type":"paragraph"},{"start":4,"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}]}]}]},{"inlineContent":[{"type":"image","identifier":"Setup-Choose-Package"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Configuring-the-SDK","text":"Configuring the SDK"},{"content":[{"inlineContent":[{"type":"text","text":"Don’t forget to "},{"code":"import FreemiumKit","type":"codeVoice"},{"type":"text","text":" for any of the below calls to build."}],"type":"paragraph"}],"name":"Tip","type":"aside","style":"tip"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Make sure your app’s Asset Catalog contains the "},{"code":"FreemiumKit","type":"codeVoice"},{"text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.shared)","type":"codeVoice"},{"text":" to every scene in the app entry point. For example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call "},{"type":"codeVoice","code":".withOverridesForDebug(purchasedTier: 1)"},{"type":"text","text":" on "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":" within an "},{"type":"codeVoice","code":"#if DEBUG"},{"type":"text","text":" check."}]}],"name":"Tip","type":"aside","style":"tip"},{"level":2,"type":"heading","anchor":"Showing-the-Paywalls","text":"Showing the Paywalls"},{"identifier":"PaidViews","type":"video"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you. For example:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ opens paywall if user has not purchased, else works like a normal (stylable) button","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ this one behaves exactly the same as the one above, but gives you more flexibility to change the unlocked\/locked views","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"]},{"type":"paragraph","inlineContent":[{"text":"Both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":"). This leads to a default behavior of unlocking the feature only if tier 1 is purchased and showing a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"code":".paywall(isPresented:)","type":"codeVoice"},{"type":"text","text":" modifier to your custom views where needed. For example:"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" object as an "},{"code":"@EnvironmentObject","type":"codeVoice"},{"type":"text","text":" and call "},{"code":".purchasedTier","type":"codeVoice"},{"type":"text","text":" (or "},{"code":".hasPurchased","type":"codeVoice"},{"type":"text","text":" if you only have one tier) like so:"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"text":"If you want to show the paywall right upon appearance of a view, you should additionally check for the ","type":"text"},{"type":"codeVoice","code":"purchasesLoaded"},{"text":" property of the environment object like so:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject private var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onAppear {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier == nil {","            showPaywall = true","         }","      }","      .onChange(of: freemiumKit.purchasesLoaded) {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier == nil {","            showPaywall = true","         }","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that you can also access the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object from your models globally by calling "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":". But in your SwiftUI views you should use the "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" so your views get updated correctly."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"syntax":"swift","type":"codeListing","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"]}]}]},{"inlineContent":[{"type":"image","identifier":"Setup-PaidStatusView"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".decorative"},{"text":" style has multiple ","type":"text"},{"type":"codeVoice","code":"icon"},{"text":" parameter options and also accepts optional ","type":"text"},{"type":"codeVoice","code":"foregroundColor"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"backgroundColor"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"type":"codeVoice","code":"PaidStatusView"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"SwiftUI-Previews","text":"SwiftUI Previews"},{"inlineContent":[{"type":"text","text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.preview)"},{"type":"text","text":" in your preview code like so:"}],"type":"paragraph"},{"syntax":"swift","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"type":"codeListing"},{"inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"type":"codeVoice","code":"withOverridesForDebug(purchasedTier:)"},{"text":" function on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" and set your desired tier (set ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" for full access). The default ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"],"type":"codeListing"},{"level":2,"type":"heading","anchor":"Contact","text":"Contact"},{"inlineContent":[{"type":"text","text":"Have questions or need support? Reach out to me at "},{"type":"reference","identifier":"mailto:freemiumkit@fline.dev","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Legal","text":"Legal"},{"inlineContent":[{"text":"Cihat Gündüz © 2024. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Privacy: No personal data is tracked on this site.","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/www.fline.dev\/imprint\/","type":"reference"}],"type":"small"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"]}],"kind":"article","sections":[],"abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"references":{"Setup-Choose-Package":{"identifier":"Setup-Choose-Package","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}],"type":"image"},"Setup-PaidStatusView":{"identifier":"Setup-PaidStatusView","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-PaidStatusView.jpeg"}],"type":"image"},"Setup-Add-Package":{"identifier":"Setup-Add-Package","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Package.jpeg"}],"type":"image"},"PaidViews":{"identifier":"PaidViews","alt":null,"poster":"PaidViews-Poster","variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}],"type":"video"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"kind":"article","url":"\/documentation\/freemiumkit\/faqs","type":"topic","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","role":"article","title":"FAQs","abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}]},"mailto:freemiumkit@fline.dev":{"title":"freemiumkit@fline.dev","titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}],"identifier":"mailto:freemiumkit@fline.dev","type":"link","url":"mailto:freemiumkit@fline.dev"},"FreemiumKit.png":{"identifier":"FreemiumKit.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}],"type":"image"},"Setup-Add-Dependency":{"identifier":"Setup-Add-Dependency","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Dependency.jpeg"}],"type":"image"},"https://www.fline.dev/imprint/":{"title":"Imprint","titleInlineContent":[{"text":"Imprint","type":"text"}],"identifier":"https:\/\/www.fline.dev\/imprint\/","type":"link","url":"https:\/\/www.fline.dev\/imprint\/"},"doc://FreemiumKit/documentation/Index":{"kind":"article","url":"\/documentation\/index","type":"topic","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"identifier":"doc:\/\/FreemiumKit\/documentation\/Index","role":"collection","title":"FreemiumKit","abstract":[{"text":"Simple In-App Purchases and Subscriptions for Apple Platforms:","type":"text"},{"text":" ","type":"text"},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}]},"PaidViews-Poster":{"identifier":"PaidViews-Poster","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"type":"image"}}}