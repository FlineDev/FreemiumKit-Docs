{"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Adding the SDK","anchor":"Adding-the-SDK","type":"heading"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Open your app project in Xcode.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In the “File” menu select “Add Package Dependencies…”","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"\/\/ TODO: add screenshot","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}],"type":"paragraph"},{"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"type":"codeListing","syntax":null},{"style":"warning","type":"aside","content":[{"inlineContent":[{"type":"text","text":"During the current Beta phase, you need to specify the "},{"type":"codeVoice","code":"main"},{"type":"text","text":" branch for it to work."}],"type":"paragraph"}],"name":"Warning"},{"inlineContent":[{"text":"\/\/ TODO: add screenshot","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select your app target (if not already selected) and confirm by pressing “Add Package”","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/ TODO: add screenshot"}]}]}]},{"level":2,"text":"Configuring the SDK","anchor":"Configuring-the-SDK","type":"heading"},{"name":"Tip","style":"tip","content":[{"inlineContent":[{"type":"text","text":"Don’t forget to "},{"type":"codeVoice","code":"import FreemiumKit"},{"type":"text","text":" for any of the below calls to build."}],"type":"paragraph"}],"type":"aside"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure your app’s Asset Catalog contains the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.shared)"},{"type":"text","text":" to every scene in the app entry point. For example:"}]},{"code":["@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"type":"codeListing","syntax":"swift"}]}]},{"level":2,"text":"Showing the Paywalls","anchor":"Showing-the-Paywalls","type":"heading"},{"identifier":"PaidViews","type":"video"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". For example:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ opens paywall if user has not purchased, else works like a normal (stylable) button","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ this one behaves exactly the same as the one above, but gives you more flexibility to change the unlocked\/locked views","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"]},{"type":"paragraph","inlineContent":[{"text":"Note that both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":"). This leads to a default behavior of unlocking the feature only if tier 1 is purchased and showing a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"code":".paywall(isPresented:)","type":"codeVoice"},{"type":"text","text":" modifier to your custom views where needed. For example:"}]},{"type":"codeListing","syntax":"swift","code":["struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         self.showPaywall = true","      }","      .paywall(isPresent: self.$showPaywall)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object as an "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" and call "},{"type":"codeVoice","code":".purchasedTier"},{"type":"text","text":" on it like so:"}]},{"type":"codeListing","syntax":"swift","code":["struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if self.freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            self.showPaywall = true","         }","         .paywall(isPresent: self.$showPaywall)","      }","   }","}"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"code":"PaidStatusView","type":"codeVoice"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"\/\/ TODO: add screenshot of both styles","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":".decorative","type":"codeVoice"},{"type":"text","text":" style has multiple "},{"code":"icon","type":"codeVoice"},{"type":"text","text":" parameter options and also accepts optional "},{"code":"foregroundColor","type":"codeVoice"},{"type":"text","text":" and "},{"code":"backgroundColor","type":"codeVoice"},{"type":"text","text":" parameters if you need to adjust the defaults. Note that the "},{"code":"PaidStatusView","type":"codeVoice"},{"type":"text","text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction."}]}]}]},{"level":2,"text":"SwiftUI Previews","anchor":"SwiftUI-Previews","type":"heading"},{"inlineContent":[{"type":"text","text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.preview)"},{"type":"text","text":" in your preview code like so:"}],"type":"paragraph"},{"code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you want to simulate a specific paid state in your previews, you can call the "},{"type":"codeVoice","code":"withDebugOverrides(purchasedTier:)"},{"type":"text","text":" function on "},{"type":"codeVoice","code":"FreemiumKit.preview"},{"type":"text","text":" and set your desired tier (set "},{"type":"codeVoice","code":"1"},{"type":"text","text":" for full access). The default "},{"type":"codeVoice","code":"FreemiumKit.preview"},{"type":"text","text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:"}],"type":"paragraph"},{"code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withDebugOverrides(purchasedTier: 1))","}"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"Contact","anchor":"Contact","type":"heading"},{"inlineContent":[{"type":"text","text":"Have questions or need support? Reach out to me at "},{"type":"reference","identifier":"mailto:freemiumkit@fline.dev","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"text":"Legal","anchor":"Legal","type":"heading"},{"inlineContent":[{"type":"text","text":"Cihat Gündüz © 2024. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Privacy: No personal data is tracked on this site."},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/www.fline.dev\/imprint\/","isActive":true}],"type":"small"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"metadata":{"title":"SDK Setup Guide","role":"article","roleHeading":"FreemiumKit","images":[{"identifier":"FreemiumKit.png","type":"icon"}]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"sections":[],"references":{"https://www.fline.dev/imprint/":{"url":"https:\/\/www.fline.dev\/imprint\/","title":"Imprint","titleInlineContent":[{"text":"Imprint","type":"text"}],"identifier":"https:\/\/www.fline.dev\/imprint\/","type":"link"},"mailto:freemiumkit@fline.dev":{"url":"mailto:freemiumkit@fline.dev","title":"freemiumkit@fline.dev","titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}],"identifier":"mailto:freemiumkit@fline.dev","type":"link"},"FreemiumKit.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}],"identifier":"FreemiumKit.png","alt":null,"type":"image"},"PaidViews-Poster":{"variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"identifier":"PaidViews-Poster","alt":null,"type":"image"},"PaidViews":{"variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}],"identifier":"PaidViews","poster":"PaidViews-Poster","alt":null,"type":"video"},"doc://FreemiumKit/documentation/Index":{"role":"collection","abstract":[{"type":"text","text":"Simple In-App Purchases and Subscriptions for Apple Platforms:"},{"type":"text","text":" "},{"type":"text","text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more."}],"url":"\/documentation\/index","title":"FreemiumKit","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"identifier":"doc:\/\/FreemiumKit\/documentation\/Index","kind":"article","type":"topic"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"role":"article","abstract":[{"type":"text","text":"The most frequently asked questions about FreemiumKit."}],"url":"\/documentation\/freemiumkit\/faqs","title":"FAQs","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","kind":"article","type":"topic"}}}