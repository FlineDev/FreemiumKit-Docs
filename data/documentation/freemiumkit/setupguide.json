{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"abstract":[{"type":"text","text":"Learn how to set up your app for our paywalls and live push notifications."}],"metadata":{"title":"SDK Setup Guide","role":"article","roleHeading":"FreemiumKit","images":[{"identifier":"FreemiumKit.png","type":"icon"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","text":"Adding the SDK","level":2,"anchor":"Adding-the-SDK"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Open your app project in Xcode.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"In the “File” menu select “Add Package Dependencies…”"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"image","identifier":"Setup-Add-Dependency"}],"type":"paragraph"},{"type":"orderedList","start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}]},{"type":"codeListing","syntax":null,"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"]}]}]},{"inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}],"type":"paragraph"},{"type":"orderedList","start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Select your app target (if not already selected) and confirm by pressing “Add Package”","type":"text"}]}]}]},{"inlineContent":[{"type":"image","identifier":"Setup-Choose-Package"}],"type":"paragraph"},{"type":"heading","text":"Configuring the SDK","level":2,"anchor":"Configuring-the-SDK"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t forget to "},{"type":"codeVoice","code":"import FreemiumKit"},{"type":"text","text":" for any of the below calls to build."}]}],"type":"aside","name":"Tip","style":"tip"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Make sure your app’s Asset Catalog contains the ","type":"text"},{"code":"FreemiumKit","type":"codeVoice"},{"text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.shared)","type":"codeVoice"},{"text":" to every scene in the app entry point. For example:","type":"text"}]},{"code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"syntax":"swift","type":"codeListing"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call "},{"type":"codeVoice","code":".withOverridesForDebug(purchasedTier: 1)"},{"type":"text","text":" on "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":" within an "},{"type":"codeVoice","code":"#if DEBUG"},{"type":"text","text":" check."}]}],"type":"aside","name":"Tip","style":"tip"},{"type":"heading","text":"Showing the Paywalls","level":2,"anchor":"Showing-the-Paywalls"},{"type":"video","identifier":"PaidViews"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you. For example:","type":"text"}]},{"type":"codeListing","code":["\/\/ opens paywall if user has not purchased, else works like a normal (stylable) button","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ this one behaves exactly the same as the one above, but gives you more flexibility to change the unlocked\/locked views","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":"). This leads to a default behavior of unlocking the feature only if tier 1 is purchased and showing a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"code":".paywall(isPresented:)","type":"codeVoice"},{"type":"text","text":" modifier to your custom views where needed. For example:"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object as an "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" and call "},{"type":"codeVoice","code":".purchasedTier"},{"type":"text","text":" (or "},{"type":"codeVoice","code":".hasPurchased"},{"type":"text","text":" if you only have one tier) like so:"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"text":"If you want to show the paywall right upon appearance of a view, you should additionally check for the ","type":"text"},{"code":"purchasesLoaded","type":"codeVoice"},{"text":" property of the environment object like so:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject private var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onAppear {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier = nil {","            showPaywall = true","         }","      }","      .onChange(of: freemiumKit.purchasesLoaded) {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier = nil {","            showPaywall = true","         }","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"text":"Note that you can also access the ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" object from your models globally by calling ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.shared"},{"text":". But in your SwiftUI views you should use the ","type":"text"},{"type":"codeVoice","code":"@EnvironmentObject"},{"text":" so your views get updated correctly.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"type":"codeListing","syntax":"swift","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"]}]}]},{"inlineContent":[{"identifier":"Setup-PaidStatusView","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":".decorative"},{"type":"text","text":" style has multiple "},{"type":"codeVoice","code":"icon"},{"type":"text","text":" parameter options and also accepts optional "},{"type":"codeVoice","code":"foregroundColor"},{"type":"text","text":" and "},{"type":"codeVoice","code":"backgroundColor"},{"type":"text","text":" parameters if you need to adjust the defaults. Note that the "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction."}],"type":"paragraph"},{"type":"heading","text":"SwiftUI Previews","level":2,"anchor":"SwiftUI-Previews"},{"inlineContent":[{"type":"text","text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.preview)"},{"type":"text","text":" in your preview code like so:"}],"type":"paragraph"},{"type":"codeListing","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you want to simulate a specific paid state in your previews, you can call the "},{"code":"withOverridesForDebug(purchasedTier:)","type":"codeVoice"},{"type":"text","text":" function on "},{"code":"FreemiumKit.preview","type":"codeVoice"},{"type":"text","text":" and set your desired tier (set "},{"code":"1","type":"codeVoice"},{"type":"text","text":" for full access). The default "},{"code":"FreemiumKit.preview","type":"codeVoice"},{"type":"text","text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:"}],"type":"paragraph"},{"type":"codeListing","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"],"syntax":"swift"},{"type":"heading","text":"Contact","level":2,"anchor":"Contact"},{"inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"isActive":true,"identifier":"mailto:freemiumkit@fline.dev","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Legal","level":2,"anchor":"Legal"},{"inlineContent":[{"text":"Cihat Gündüz © 2024. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Privacy: No personal data is tracked on this site.","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/www.fline.dev\/imprint\/","isActive":true,"type":"reference"}],"type":"small"}],"kind":"content"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"references":{"PaidViews":{"variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}],"poster":"PaidViews-Poster","identifier":"PaidViews","alt":null,"type":"video"},"PaidViews-Poster":{"variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"identifier":"PaidViews-Poster","alt":null,"type":"image"},"mailto:freemiumkit@fline.dev":{"titleInlineContent":[{"type":"text","text":"freemiumkit@fline.dev"}],"identifier":"mailto:freemiumkit@fline.dev","url":"mailto:freemiumkit@fline.dev","title":"freemiumkit@fline.dev","type":"link"},"Setup-PaidStatusView":{"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-PaidStatusView.jpeg"}],"identifier":"Setup-PaidStatusView","alt":null,"type":"image"},"https://www.fline.dev/imprint/":{"titleInlineContent":[{"type":"text","text":"Imprint"}],"identifier":"https:\/\/www.fline.dev\/imprint\/","url":"https:\/\/www.fline.dev\/imprint\/","title":"Imprint","type":"link"},"Setup-Add-Package":{"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Package.jpeg"}],"identifier":"Setup-Add-Package","alt":null,"type":"image"},"doc://FreemiumKit/documentation/Index":{"type":"topic","url":"\/documentation\/index","title":"FreemiumKit","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","abstract":[{"text":"Simple In-App Purchases and Subscriptions for Apple Platforms:","type":"text"},{"text":" ","type":"text"},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}],"identifier":"doc:\/\/FreemiumKit\/documentation\/Index","role":"collection"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"type":"topic","url":"\/documentation\/freemiumkit\/faqs","title":"FAQs","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}],"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","role":"article"},"Setup-Add-Dependency":{"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Dependency.jpeg"}],"identifier":"Setup-Add-Dependency","alt":null,"type":"image"},"Setup-Choose-Package":{"variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}],"identifier":"Setup-Choose-Package","alt":null,"type":"image"},"FreemiumKit.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}],"identifier":"FreemiumKit.png","alt":null,"type":"image"}}}