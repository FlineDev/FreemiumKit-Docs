{"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"metadata":{"images":[{"type":"icon","identifier":"FreemiumKit.png"}],"role":"article","title":"SDK Setup Guide","roleHeading":"FreemiumKit"},"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"identifier":{"url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Adding-the-SDK","level":2,"text":"Adding the SDK"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Open your app project in Xcode."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In the “File” menu select “Add Package Dependencies…”","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}]},{"type":"orderedList","start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Paste this to the top right text field and press “Add Package”:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"]}]}]},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}]},{"type":"orderedList","start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Select your app target (if not already selected) and confirm by pressing “Add Package”","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Setup-Choose-Package"}]},{"type":"heading","anchor":"Configuring-the-SDK","level":2,"text":"Configuring the SDK"},{"style":"tip","type":"aside","name":"Tip","content":[{"inlineContent":[{"text":"Don’t forget to ","type":"text"},{"type":"codeVoice","code":"import FreemiumKit"},{"text":" for any of the below calls to build.","type":"text"}],"type":"paragraph"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Make sure your app’s Asset Catalog contains the "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a call to "},{"code":".environmentObject(FreemiumKit.shared)","type":"codeVoice"},{"type":"text","text":" to every scene in the app entry point. For example:"}]},{"syntax":"swift","code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"type":"codeListing"}]}]},{"style":"tip","type":"aside","name":"Tip","content":[{"inlineContent":[{"text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call ","type":"text"},{"type":"codeVoice","code":".overrideForDebug"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.shared"},{"text":" within an ","type":"text"},{"type":"codeVoice","code":"#if DEBUG"},{"text":" check like this:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["WindowGroup {","   MainView()","      .onAppear {","         #if DEBUG","         FreemiumKit.shared.overrideForDebug(purchasedTier: 1)","         #endif","      }","}",".environmentObject(FreemiumKit.shared)"],"type":"codeListing"}]},{"type":"heading","anchor":"Understanding-Apples-Tier-System","level":2,"text":"Understanding Apples Tier System"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your goal is to ship your app with any combination of Monthly, Yearly, and Lifetime purchases, you most likely only need one tier: Tier 1. Just pass "},{"code":"1","type":"codeVoice"},{"type":"text","text":" for the "},{"code":"purchasedTier","type":"codeVoice"},{"type":"text","text":" parameter everywhere – easy. Continue to the next section."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But if you want to support multiple levels of access to your app, like a combination of Monthly\/Yearly\/Lifetime for the ‘Pro’ level, another combination of Monthly\/Yearly\/Lifetime for the ‘Max’ level, and maybe another combination of Monthly\/Yearly\/Lifetime for the ‘Ultra’ level, that’s when you need to think about which value to pass to the "},{"type":"codeVoice","code":"purchasedTier"},{"type":"text","text":" parameter. Note that "},{"type":"codeVoice","code":"1"},{"type":"text","text":" always refers to the highest level. That’s how Apple has decided their tier system to work. Read their "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","isActive":true},{"type":"text","text":" to learn more."}]},{"type":"heading","anchor":"Showing-the-Paywalls","level":2,"text":"Showing the Paywalls"},{"type":"video","identifier":"PaidViews"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"code":"PaidFeatureButton","type":"codeVoice"},{"type":"text","text":" or "},{"code":"PaidFeatureView","type":"codeVoice"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you and saves you a lot of boilerplate code. For example:"}],"type":"paragraph"},{"code":["\/\/ opens paywall if user has not purchased, else just like `Button`","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ exactly the same as above, but gives you full customizability","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Both "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" and "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":" accept an "},{"type":"codeVoice","code":"unlocksAtTier"},{"type":"text","text":" parameter of type "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" (default: "},{"type":"codeVoice","code":"1"},{"type":"text","text":") and a "},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"type":"text","text":" parameter of type "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" (default: "},{"type":"codeVoice","code":"true"},{"type":"text","text":")."}],"type":"paragraph"},{"inlineContent":[{"text":"If you don’t pass any of those parameters, the default behavior unlocks the feature only if tier 1 is purchased and shows a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"type":"codeVoice","code":".paywall(isPresented:)"},{"type":"text","text":" modifier to your custom views where needed. For example:"}]},{"type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" object as an "},{"code":"@EnvironmentObject","type":"codeVoice"},{"type":"text","text":" and call "},{"code":".purchasedTier","type":"codeVoice"},{"type":"text","text":" or "},{"code":".hasPurchased","type":"codeVoice"},{"type":"text","text":" if you only have one tier like so:"}]},{"type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to show the paywall upon appearance of a view if a user has not paid, you should first check that the "},{"type":"codeVoice","code":"purchasesLoaded"},{"type":"text","text":" property of "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" – or else paying users might see the paywall, too. Since this is a common use case, our SDK ships with the "},{"type":"codeVoice","code":".onPurchasesLoaded"},{"type":"text","text":" view modifier which is guaranteed to be called exactly once (like "},{"type":"codeVoice","code":".onAppear"},{"type":"text","text":") but only when purchases are loaded:"}]},{"type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onPurchasesLoaded {","         if !FremiumKit.shared.hasPurchased {","            showPaywall = true","         }","      }","   }","}"],"syntax":"swift"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"syntax":"swift","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"type":"codeListing"}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Setup-PaidStatusView"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":".decorative"},{"type":"text","text":" style has multiple "},{"type":"codeVoice","code":"icon"},{"type":"text","text":" parameter options and also accepts optional "},{"type":"codeVoice","code":"foregroundColor"},{"type":"text","text":" and "},{"type":"codeVoice","code":"backgroundColor"},{"type":"text","text":" parameters if you need to adjust the defaults. Note that the "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you place it inside a "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" with "},{"type":"codeVoice","code":"Sections"},{"type":"text","text":", you might want to set the "},{"type":"codeVoice","code":"listRowBackground"},{"type":"text","text":" for a clean look like this:"}]},{"type":"codeListing","syntax":"swift","code":["Form {","   Section {","      PaidStatusView(style: .decorative(icon: .laurel))","         .listRowBackground(Color.accentColor)","   }","   ","   \/\/ ...","}"]},{"type":"heading","anchor":"SwiftUI-Previews","level":2,"text":"SwiftUI Previews"},{"type":"paragraph","inlineContent":[{"text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.preview)","type":"codeVoice"},{"text":" in your preview code like so:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"]},{"type":"paragraph","inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"code":"withOverridesForDebug(purchasedTier:)","type":"codeVoice"},{"text":" function on ","type":"text"},{"code":"FreemiumKit.preview","type":"codeVoice"},{"text":" and set your desired tier (set ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" for full access). The default ","type":"text"},{"code":"FreemiumKit.preview","type":"codeVoice"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"]},{"type":"heading","anchor":"Contact","level":2,"text":"Contact"},{"type":"paragraph","inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"identifier":"mailto:freemiumkit@fline.dev","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"heading","anchor":"Legal","level":2,"text":"Legal"},{"type":"small","inlineContent":[{"text":"Cihat Gündüz © 2024. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Privacy: No personal data is tracked on this site.","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/www.fline.dev\/imprint\/","isActive":true,"type":"reference"}]}]}],"references":{"https://www.fline.dev/imprint/":{"type":"link","title":"Imprint","titleInlineContent":[{"text":"Imprint","type":"text"}],"url":"https:\/\/www.fline.dev\/imprint\/","identifier":"https:\/\/www.fline.dev\/imprint\/"},"mailto:freemiumkit@fline.dev":{"type":"link","title":"freemiumkit@fline.dev","titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}],"url":"mailto:freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev"},"https://developer.apple.com/help/app-store-connect/manage-subscriptions/offer-auto-renewable-subscriptions":{"type":"link","title":"official docs","titleInlineContent":[{"text":"official docs","type":"text"}],"url":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions"},"PaidViews-Poster":{"type":"image","alt":null,"variants":[{"url":"\/images\/PaidViews-Poster.jpeg","traits":["1x","light"]}],"identifier":"PaidViews-Poster"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"type":"topic","url":"\/documentation\/freemiumkit\/faqs","role":"article","abstract":[{"type":"text","text":"The most frequently asked questions about FreemiumKit."}],"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"title":"FAQs","kind":"article"},"doc://FreemiumKit/documentation/Index":{"type":"topic","url":"\/documentation\/index","role":"collection","abstract":[{"type":"text","text":"Simple In-App Purchases and Subscriptions for Apple Platforms:"},{"type":"text","text":" "},{"type":"text","text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more."}],"identifier":"doc:\/\/FreemiumKit\/documentation\/Index","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"title":"FreemiumKit","kind":"article"},"FreemiumKit.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/FreemiumKit.png","traits":["1x","light"]}],"identifier":"FreemiumKit.png"},"Setup-Add-Package":{"type":"image","alt":null,"variants":[{"url":"\/images\/Setup-Add-Package.jpeg","traits":["1x","light"]}],"identifier":"Setup-Add-Package"},"Setup-Choose-Package":{"type":"image","alt":null,"variants":[{"url":"\/images\/Setup-Choose-Package.jpeg","traits":["1x","light"]}],"identifier":"Setup-Choose-Package"},"Setup-PaidStatusView":{"type":"image","alt":null,"variants":[{"url":"\/images\/Setup-PaidStatusView.jpeg","traits":["1x","light"]}],"identifier":"Setup-PaidStatusView"},"Setup-Add-Dependency":{"type":"image","alt":null,"variants":[{"url":"\/images\/Setup-Add-Dependency.jpeg","traits":["1x","light"]}],"identifier":"Setup-Add-Dependency"},"PaidViews":{"poster":"PaidViews-Poster","type":"video","alt":null,"variants":[{"url":"\/videos\/PaidViews.mp4","traits":["1x","light"]}],"identifier":"PaidViews"}}}