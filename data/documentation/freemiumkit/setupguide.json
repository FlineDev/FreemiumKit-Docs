{"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Adding-the-SDK","type":"heading","text":"Adding the SDK"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your app project in Xcode."}]}]},{"content":[{"inlineContent":[{"text":"In the “File” menu select “Add Package Dependencies…”","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}],"type":"paragraph"},{"start":3,"items":[{"content":[{"inlineContent":[{"text":"Paste this to the top right text field and press “Add Package”:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"type":"codeListing"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}],"type":"paragraph"},{"start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}]}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Choose-Package","type":"image"}],"type":"paragraph"},{"level":2,"anchor":"Configuring-the-SDK","type":"heading","text":"Configuring the SDK"},{"style":"tip","type":"aside","name":"Tip","content":[{"inlineContent":[{"text":"Don’t forget to ","type":"text"},{"code":"import FreemiumKit","type":"codeVoice"},{"text":" for any of the below calls to build.","type":"text"}],"type":"paragraph"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Make sure your app’s Asset Catalog contains the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.shared)"},{"type":"text","text":" to every scene in the app entry point. For example:"}]},{"code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","      }","      .environmentObject(FreemiumKit.shared)","   }","}"],"type":"codeListing","syntax":"swift"}]}],"type":"orderedList"},{"style":"tip","type":"aside","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can append ","type":"text"},{"type":"codeVoice","code":".withDebugOverrides(purchasedTier: 1)"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.shared"},{"text":".","type":"text"}]}]},{"level":2,"anchor":"Showing-the-Paywalls","type":"heading","text":"Showing the Paywalls"},{"type":"video","identifier":"PaidViews"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you. For example:"}]},{"code":["\/\/ opens paywall if user has not purchased, else works like a normal (stylable) button","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ this one behaves exactly the same as the one above, but gives you more flexibility to change the unlocked\/locked views","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Both ","type":"text"},{"type":"codeVoice","code":"PaidFeatureButton"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"PaidFeatureView"},{"text":" accept an ","type":"text"},{"type":"codeVoice","code":"unlocksAtTier"},{"text":" parameter of type ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" (default: ","type":"text"},{"type":"codeVoice","code":"1"},{"text":") and a ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" parameter of type ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":" (default: ","type":"text"},{"type":"codeVoice","code":"true"},{"text":"). This leads to a default behavior of unlocking the feature only if tier 1 is purchased and showing a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"type":"codeVoice","code":".paywall(isPresented:)"},{"type":"text","text":" modifier to your custom views where needed. For example:"}],"type":"paragraph"},{"code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object as an "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" and call "},{"type":"codeVoice","code":".purchasedTier"},{"type":"text","text":" (or "},{"type":"codeVoice","code":".hasPurchased"},{"type":"text","text":" if you only have one tier) like so:"}],"type":"paragraph"},{"code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"If you want to show the paywall right upon appearance of a view, you should additionally check for the ","type":"text"},{"code":"purchasesLoaded","type":"codeVoice"},{"text":" property of the environment object like so:","type":"text"}],"type":"paragraph"},{"code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject private var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onAppear {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier = nil {","            showPaywall = true","         }","      }","      .onChange(of: freemiumKit.purchasesLoaded) {","         if freemiumkit.purchasesLoaded, freemiumkit.purchasedTier = nil {","            showPaywall = true","         }","      }","   }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Note that you can also access the "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" object from your models globally by calling "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":". But in your SwiftUI views you should use the "},{"type":"codeVoice","code":"@EnvironmentObject"},{"type":"text","text":" so your views get updated correctly."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"type":"codeListing","syntax":"swift","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"]}]}],"type":"orderedList"},{"inlineContent":[{"type":"image","identifier":"Setup-PaidStatusView"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".decorative"},{"text":" style has multiple ","type":"text"},{"type":"codeVoice","code":"icon"},{"text":" parameter options and also accepts optional ","type":"text"},{"type":"codeVoice","code":"foregroundColor"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"backgroundColor"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"type":"codeVoice","code":"PaidStatusView"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"SwiftUI-Previews","type":"heading","text":"SwiftUI Previews"},{"inlineContent":[{"text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.preview)","type":"codeVoice"},{"text":" in your preview code like so:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"]},{"inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"code":"withDebugOverrides(purchasedTier:)","type":"codeVoice"},{"text":" function on ","type":"text"},{"code":"FreemiumKit.preview","type":"codeVoice"},{"text":" and set your desired tier (set ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" for full access). The default ","type":"text"},{"code":"FreemiumKit.preview","type":"codeVoice"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withDebugOverrides(purchasedTier: 1))","}"]},{"level":2,"anchor":"Contact","type":"heading","text":"Contact"},{"inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"isActive":true,"identifier":"mailto:freemiumkit@fline.dev","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Legal","type":"heading","text":"Legal"},{"inlineContent":[{"text":"Cihat Gündüz © 2024. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Privacy: No personal data is tracked on this site.","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/www.fline.dev\/imprint\/","type":"reference","isActive":true}],"type":"small"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"kind":"article","metadata":{"title":"SDK Setup Guide","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"role":"article","roleHeading":"FreemiumKit"},"sections":[],"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"]}],"abstract":[{"type":"text","text":"Learn how to set up your app for our paywalls and live push notifications."}],"references":{"Setup-PaidStatusView":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-PaidStatusView.jpeg"}],"alt":null,"identifier":"Setup-PaidStatusView"},"mailto:freemiumkit@fline.dev":{"type":"link","title":"freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","url":"mailto:freemiumkit@fline.dev","titleInlineContent":[{"type":"text","text":"freemiumkit@fline.dev"}]},"Setup-Add-Package":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Package.jpeg"}],"alt":null,"identifier":"Setup-Add-Package"},"Setup-Choose-Package":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Choose-Package.jpeg"}],"alt":null,"identifier":"Setup-Choose-Package"},"doc://FreemiumKit/documentation/Index":{"title":"FreemiumKit","url":"\/documentation\/index","type":"topic","identifier":"doc:\/\/FreemiumKit\/documentation\/Index","abstract":[{"type":"text","text":"Simple In-App Purchases and Subscriptions for Apple Platforms:"},{"type":"text","text":" "},{"type":"text","text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more."}],"images":[{"type":"icon","identifier":"FreemiumKit.png"}],"role":"collection","kind":"article"},"Setup-Add-Dependency":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Setup-Add-Dependency.jpeg"}],"alt":null,"identifier":"Setup-Add-Dependency"},"PaidViews":{"type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/PaidViews.mp4"}],"poster":"PaidViews-Poster","alt":null,"identifier":"PaidViews"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"abstract":[{"type":"text","text":"The most frequently asked questions about FreemiumKit."}],"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","title":"FAQs","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"role":"article","url":"\/documentation\/freemiumkit\/faqs","type":"topic","kind":"article"},"FreemiumKit.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/FreemiumKit.png"}],"alt":null,"identifier":"FreemiumKit.png"},"https://www.fline.dev/imprint/":{"type":"link","title":"Imprint","identifier":"https:\/\/www.fline.dev\/imprint\/","url":"https:\/\/www.fline.dev\/imprint\/","titleInlineContent":[{"type":"text","text":"Imprint"}]},"PaidViews-Poster":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/PaidViews-Poster.jpeg"}],"alt":null,"identifier":"PaidViews-Poster"}}}