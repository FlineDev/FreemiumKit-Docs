{"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Detailed Setup Video (17 min)","identifier":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","type":"reference","isActive":true}},"primaryContentSections":[{"kind":"content","content":[{"text":"Adding the SDK","anchor":"Adding-the-SDK","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your app project in Xcode."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"In the “File” menu select “Add Package Dependencies…”"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Paste this to the top right text field and press “Add Package”:"}]},{"syntax":null,"type":"codeListing","code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"]}]}],"type":"orderedList","start":3},{"type":"paragraph","inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Select your app target (if not already selected) and confirm by pressing “Add Package”","type":"text"}]}]}],"type":"orderedList","start":4},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Setup-Choose-Package"}]},{"text":"Configuring the SDK","anchor":"Configuring-the-SDK","type":"heading","level":2},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t forget to "},{"type":"codeVoice","code":"import FreemiumKit"},{"type":"text","text":" for any of the below calls to build."}]}],"style":"tip","type":"aside","name":"Tip"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Make sure your app’s Asset Catalog contains the ","type":"text"},{"code":"FreemiumKit","type":"codeVoice"},{"text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.shared)"},{"type":"text","text":" to the root view of every scene in the app entry point. For example:"}],"type":"paragraph"},{"syntax":"swift","code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","            .environmentObject(FreemiumKit.shared)","      }","   }","}"],"type":"codeListing"}]}],"type":"orderedList"},{"content":[{"type":"paragraph","inlineContent":[{"text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call ","type":"text"},{"code":".overrideForDebug","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"FreemiumKit.shared","type":"codeVoice"},{"text":" within an ","type":"text"},{"code":"#if DEBUG","type":"codeVoice"},{"text":" check like this:","type":"text"}]},{"code":["WindowGroup {","   MainView()","      .onAppear {","         #if DEBUG","         FreemiumKit.shared.overrideForDebug(purchasedTier: 1)","         #endif","      }","      .environmentObject(FreemiumKit.shared)","}"],"type":"codeListing","syntax":"swift"}],"style":"tip","type":"aside","name":"Tip"},{"text":"Understanding Apples Tier System","anchor":"Understanding-Apples-Tier-System","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"If your goal is to ship your app with any combination of Monthly, Yearly, and Lifetime purchases, you most likely only need one tier: Tier 1. Just pass ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" for the ","type":"text"},{"code":"purchasedTier","type":"codeVoice"},{"text":" parameter everywhere – easy. Continue to the next section.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"But if you want to support multiple levels of access to your app, like a combination of Monthly\/Yearly\/Lifetime for the ‘Pro’ level, another combination of Monthly\/Yearly\/Lifetime for the ‘Max’ level, and maybe another combination of Monthly\/Yearly\/Lifetime for the ‘Ultra’ level, that’s when you need to think about which value to pass to the ","type":"text"},{"code":"purchasedTier","type":"codeVoice"},{"text":" parameter. Note that ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" always refers to the highest level. That’s how Apple has decided their tier system to work. Read their ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","isActive":true,"type":"reference"},{"text":" to learn more.","type":"text"}]},{"text":"Showing the Paywalls","anchor":"Showing-the-Paywalls","type":"heading","level":2},{"identifier":"PaidViews","type":"video"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you and saves you a lot of boilerplate code. For example:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ opens paywall if user has not purchased, else just like `Button`","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ exactly the same as above, but gives you full customizability","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"]},{"type":"paragraph","inlineContent":[{"text":"Both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you don’t pass any of those parameters, the default behavior unlocks the feature only if tier 1 is purchased and shows a paywall on press if tier 1 is not yet purchased. If "},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"type":"text","text":" is set to "},{"code":"false","type":"codeVoice"},{"type":"text","text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the ","type":"text"},{"code":".paywall(isPresented:)","type":"codeVoice"},{"text":" modifier to your custom views where needed. For example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the "},{"code":"FreemiumKit","type":"codeVoice"},{"type":"text","text":" object as an "},{"code":"@EnvironmentObject","type":"codeVoice"},{"type":"text","text":" and call "},{"code":".purchasedTier","type":"codeVoice"},{"type":"text","text":" or "},{"code":".hasPurchased","type":"codeVoice"},{"type":"text","text":" if you only have one tier like so:"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to show the paywall upon appearance of a view if a user has not paid, you should first check that the "},{"type":"codeVoice","code":"purchasesLoaded"},{"type":"text","text":" property of "},{"type":"codeVoice","code":"FreemiumKit"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" – or else paying users might see the paywall, too. Since this is a common use case, our SDK ships with the "},{"type":"codeVoice","code":".onPurchasesLoaded"},{"type":"text","text":" view modifier which is guaranteed to be called exactly once (like "},{"type":"codeVoice","code":".onAppear"},{"type":"text","text":") but only when purchases are loaded:"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onPurchasesLoaded {","         if !FremiumKit.shared.hasPurchased {","            showPaywall = true","         }","      }","   }","}"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"type":"codeListing","code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"identifier":"Setup-PaidStatusView","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":".decorative","type":"codeVoice"},{"text":" style has multiple ","type":"text"},{"code":"icon","type":"codeVoice"},{"text":" parameter options and also accepts optional ","type":"text"},{"code":"foregroundColor","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"backgroundColor","type":"codeVoice"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"code":"PaidStatusView","type":"codeVoice"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you place it inside a ","type":"text"},{"type":"codeVoice","code":"Form"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"Sections"},{"text":", you might want to set the ","type":"text"},{"type":"codeVoice","code":"listRowBackground"},{"text":" for a clean look like this:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["Form {","   Section {","      PaidStatusView(style: .decorative(icon: .laurel))","         .listRowBackground(Color.accentColor)","   }","   ","   \/\/ ...","}"]},{"text":"SwiftUI Previews","anchor":"SwiftUI-Previews","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to "},{"code":".environmentObject(FreemiumKit.preview)","type":"codeVoice"},{"type":"text","text":" in your preview code like so:"}]},{"syntax":"swift","type":"codeListing","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to simulate a specific paid state in your previews, you can call the "},{"type":"codeVoice","code":"withOverridesForDebug(purchasedTier:)"},{"type":"text","text":" function on "},{"type":"codeVoice","code":"FreemiumKit.preview"},{"type":"text","text":" and set your desired tier (set "},{"type":"codeVoice","code":"1"},{"type":"text","text":" for full access). The default "},{"type":"codeVoice","code":"FreemiumKit.preview"},{"type":"text","text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:"}]},{"syntax":"swift","type":"codeListing","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"]},{"text":"Contact","anchor":"Contact","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"identifier":"mailto:freemiumkit@fline.dev","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"text":"Legal","anchor":"Legal","type":"heading","level":2},{"type":"small","inlineContent":[{"type":"text","text":"Cihat Gündüz © 2024. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Privacy: No personal data is tracked on this site."},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/www.fline.dev\/imprint\/","isActive":true}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide"},"sections":[],"metadata":{"title":"SDK Setup Guide","roleHeading":"FreemiumKit","images":[{"type":"icon","identifier":"FreemiumKit.png"}],"role":"article"},"hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"kind":"article","abstract":[{"type":"text","text":"Learn how to set up your app for our paywalls and live push notifications."}],"references":{"https://www.youtube.com/watch?v=6JxwA3WieHs":{"identifier":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","checksum":null,"url":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","type":"download"},"doc://FreemiumKit/documentation/Index":{"type":"topic","kind":"article","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"url":"\/documentation\/index","title":"FreemiumKit","identifier":"doc:\/\/FreemiumKit\/documentation\/Index","abstract":[{"text":"Simple In-App Purchases and Subscriptions for Apple Platforms:","type":"text"},{"text":" ","type":"text"},{"text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more.","type":"text"}],"role":"collection"},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"type":"topic","kind":"article","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"url":"\/documentation\/freemiumkit\/faqs","title":"FAQs","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs","abstract":[{"text":"The most frequently asked questions about FreemiumKit.","type":"text"}],"role":"article"},"https://www.fline.dev/imprint/":{"title":"Imprint","identifier":"https:\/\/www.fline.dev\/imprint\/","titleInlineContent":[{"type":"text","text":"Imprint"}],"url":"https:\/\/www.fline.dev\/imprint\/","type":"link"},"PaidViews":{"type":"video","alt":null,"identifier":"PaidViews","poster":"PaidViews-Poster","variants":[{"url":"\/videos\/PaidViews.mp4","traits":["1x","light"]}]},"Setup-Add-Package":{"identifier":"Setup-Add-Package","alt":null,"variants":[{"url":"\/images\/Setup-Add-Package.jpeg","traits":["1x","light"]}],"type":"image"},"Setup-Choose-Package":{"type":"image","alt":null,"identifier":"Setup-Choose-Package","variants":[{"url":"\/images\/Setup-Choose-Package.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/help/app-store-connect/manage-subscriptions/offer-auto-renewable-subscriptions":{"title":"official docs","identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","titleInlineContent":[{"type":"text","text":"official docs"}],"url":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","type":"link"},"FreemiumKit.png":{"type":"image","alt":null,"identifier":"FreemiumKit.png","variants":[{"url":"\/images\/FreemiumKit.png","traits":["1x","light"]}]},"Setup-PaidStatusView":{"identifier":"Setup-PaidStatusView","alt":null,"variants":[{"url":"\/images\/Setup-PaidStatusView.jpeg","traits":["1x","light"]}],"type":"image"},"Setup-Add-Dependency":{"type":"image","alt":null,"identifier":"Setup-Add-Dependency","variants":[{"url":"\/images\/Setup-Add-Dependency.jpeg","traits":["1x","light"]}]},"mailto:freemiumkit@fline.dev":{"title":"freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","titleInlineContent":[{"type":"text","text":"freemiumkit@fline.dev"}],"url":"mailto:freemiumkit@fline.dev","type":"link"},"PaidViews-Poster":{"type":"image","alt":null,"identifier":"PaidViews-Poster","variants":[{"url":"\/images\/PaidViews-Poster.jpeg","traits":["1x","light"]}]}}}