{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/SetupGuide","interfaceLanguage":"swift"},"metadata":{"roleHeading":"FreemiumKit","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"title":"SDK Setup Guide","role":"article"},"kind":"article","hierarchy":{"paths":[["doc:\/\/FreemiumKit\/documentation\/Index"]]},"abstract":[{"text":"Learn how to set up your app for our paywalls and live push notifications.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/MigrateFromPaid","doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"],"generated":true}],"sampleCodeDownload":{"action":{"isActive":true,"type":"reference","overridingTitle":"Detailed Setup Video (17 min)","identifier":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs"},"kind":"sampleDownload"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Adding-the-SDK","type":"heading","text":"Adding the SDK"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Open your app project in Xcode.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"In the “File” menu select “Add Package Dependencies…”","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-Add-Dependency","type":"image"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Paste this to the top right text field and press “Add Package”:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["https:\/\/github.com\/FlineDev\/FreemiumKit.git"],"type":"codeListing"}]}],"type":"orderedList","start":3},{"inlineContent":[{"identifier":"Setup-Add-Package","type":"image"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Select your app target (if not already selected) and confirm by pressing “Add Package”"}],"type":"paragraph"}]}],"type":"orderedList","start":4},{"inlineContent":[{"identifier":"Setup-Choose-Package","type":"image"}],"type":"paragraph"},{"level":2,"anchor":"Configuring-the-SDK","type":"heading","text":"Configuring the SDK"},{"style":"tip","type":"aside","name":"Tip","content":[{"inlineContent":[{"text":"Don’t forget to ","type":"text"},{"type":"codeVoice","code":"import FreemiumKit"},{"text":" for any of the below calls to build.","type":"text"}],"type":"paragraph"}]},{"items":[{"content":[{"inlineContent":[{"text":"Make sure your app’s Asset Catalog contains the ","type":"text"},{"code":"FreemiumKit","type":"codeVoice"},{"text":" data set from the “Setup” tab of your app in FreemiumKit for Mac. If it doesn’t, drag & drop it from the Setup tab now.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add a call to ","type":"text"},{"code":".environmentObject(FreemiumKit.shared)","type":"codeVoice"},{"text":" to the root view of every scene in the app entry point. For example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import FreemiumKit","","@main","struct MyApp: App {","   var body: some Scene {","      WindowGroup {","         MainView()","            .environmentObject(FreemiumKit.shared)","      }","   }","}"]}]}],"type":"orderedList"},{"style":"tip","type":"aside","name":"Tip","content":[{"inlineContent":[{"type":"text","text":"If you want to disable the paywall during DEBUG builds after you’ve made sure that it works as expected, you can call "},{"type":"codeVoice","code":".overrideForDebug"},{"type":"text","text":" on "},{"type":"codeVoice","code":"FreemiumKit.shared"},{"type":"text","text":" within an "},{"type":"codeVoice","code":"#if DEBUG"},{"type":"text","text":" check like this:"}],"type":"paragraph"},{"code":["WindowGroup {","   MainView()","      .onAppear {","         #if DEBUG","         FreemiumKit.shared.overrideForDebug(purchasedTier: 1)","         #endif","      }","      .environmentObject(FreemiumKit.shared)","}"],"type":"codeListing","syntax":"swift"}]},{"level":2,"anchor":"Understanding-Apples-Tier-System","type":"heading","text":"Understanding Apples Tier System"},{"inlineContent":[{"text":"If your goal is to ship your app with any combination of Monthly, Yearly, and Lifetime purchases, you most likely only need one tier: Tier 1. Just pass ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" for the ","type":"text"},{"code":"purchasedTier","type":"codeVoice"},{"text":" parameter everywhere – easy. Continue to the next section.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"But if you want to support multiple levels of access to your app, like a combination of Monthly\/Yearly\/Lifetime for the ‘Pro’ level, another combination of Monthly\/Yearly\/Lifetime for the ‘Max’ level, and maybe another combination of Monthly\/Yearly\/Lifetime for the ‘Ultra’ level, that’s when you need to think about which value to pass to the ","type":"text"},{"type":"codeVoice","code":"purchasedTier"},{"text":" parameter. Note that ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" always refers to the highest level. That’s how Apple has decided their tier system to work. Read their ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","isActive":true,"type":"reference"},{"text":" to learn more.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Showing-the-Paywalls","type":"heading","text":"Showing the Paywalls"},{"identifier":"PaidViews","type":"video"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock your paid features for users who have not made a purchase yet by using one of the built-in views "},{"type":"codeVoice","code":"PaidFeatureButton"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PaidFeatureView"},{"type":"text","text":". This is the recommended way of using the SDK (when applicable) as it handles purchase states automatically for you and saves you a lot of boilerplate code. For example:"}]},{"code":["\/\/ opens paywall if user has not purchased, else just like `Button`","PaidFeatureButton(\"Export\", systemImage: \"square.and.arrow.up\") {","   \/\/ your export logic – no check for a paid tier needed, only called if already purchased ","}","","\/\/ exactly the same as above, but gives you full customizability","PaidFeatureView {","   Button(\"Export\", systemImage: \"square.and.arrow.up\") {","      \/\/ your export logic – no check for a paid tier needed, only called if already purchased","   }","} lockedView: {","   Label(\"Export\", systemImage: \"lock\")","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Both ","type":"text"},{"code":"PaidFeatureButton","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PaidFeatureView","type":"codeVoice"},{"text":" accept an ","type":"text"},{"code":"unlocksAtTier","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"1","type":"codeVoice"},{"text":") and a ","type":"text"},{"code":"showPaywallOnPressIfLocked","type":"codeVoice"},{"text":" parameter of type ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" (default: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you don’t pass any of those parameters, the default behavior unlocks the feature only if tier 1 is purchased and shows a paywall on press if tier 1 is not yet purchased. If ","type":"text"},{"type":"codeVoice","code":"showPaywallOnPressIfLocked"},{"text":" is set to ","type":"text"},{"type":"codeVoice","code":"false"},{"text":", the locked view will not have any automatic interaction, just rendering locked view state as-is without any added behavior.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, if you want to control the presentation of the paywall manually, you can add the "},{"type":"codeVoice","code":".paywall(isPresented:)"},{"type":"text","text":" modifier to your custom views where needed. For example:"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      Button(\"Unlock Pro\") {","         showPaywall = true","      }","      .paywall(isPresented: $showPaywall)","   }","}"]},{"type":"paragraph","inlineContent":[{"text":"If you want to conditionally hide views based on paid state (like hiding the unlock button if a user has already purchased), you can add the ","type":"text"},{"code":"FreemiumKit","type":"codeVoice"},{"text":" object as an ","type":"text"},{"code":"@EnvironmentObject","type":"codeVoice"},{"text":" and call ","type":"text"},{"code":".purchasedTier","type":"codeVoice"},{"text":" or ","type":"text"},{"code":".hasPurchased","type":"codeVoice"},{"text":" if you only have one tier like so:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @EnvironmentObject var freemiumKit: FreemiumKit","   @State var showPaywall: Bool = false","","   var body: some View {","      if freemiumKit.purchasedTier == nil {","         Button(\"Unlock Pro\") {","            showPaywall = true","         }","         .paywall(isPresented: $showPaywall)","      }","   }","}"]},{"type":"paragraph","inlineContent":[{"text":"If you want to show the paywall upon appearance of a view if a user has not paid, you should first check that the ","type":"text"},{"type":"codeVoice","code":"purchasesLoaded"},{"text":" property of ","type":"text"},{"type":"codeVoice","code":"FreemiumKit"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" – or else paying users might see the paywall, too. Since this is a common use case, our SDK ships with the ","type":"text"},{"type":"codeVoice","code":".onPurchasesLoaded"},{"text":" view modifier which is guaranteed to be called exactly once (like ","type":"text"},{"type":"codeVoice","code":".onAppear"},{"text":") but only when purchases are loaded:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import FreemiumKit","","struct MyView: View {","   @State var showPaywall: Bool = false","","   var body: some View {","      VStack {","         \/\/ your view ...","      }","      .paywall(isPresented: $showPaywall)","      .onPurchasesLoaded {","         if !FremiumKit.shared.hasPurchased {","            showPaywall = true","         }","      }","   }","}"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s also a "},{"type":"codeVoice","code":"PaidStatusView"},{"type":"text","text":" which you can add to your app’s settings to indicate to users what their current purchase state is. There are two styles:"}]},{"code":["PaidStatusView(style: .plain)","PaidStatusView(style: .decorative(icon: .laurel))"],"syntax":"swift","type":"codeListing"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"Setup-PaidStatusView","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":".decorative"},{"text":" style has multiple ","type":"text"},{"type":"codeVoice","code":"icon"},{"text":" parameter options and also accepts optional ","type":"text"},{"type":"codeVoice","code":"foregroundColor"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"backgroundColor"},{"text":" parameters if you need to adjust the defaults. Note that the ","type":"text"},{"type":"codeVoice","code":"PaidStatusView"},{"text":" will automatically open a paywall on press if there’s no purchase yet. Else, it’s rendered as just a label without interaction.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If you place it inside a ","type":"text"},{"type":"codeVoice","code":"Form"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"Sections"},{"text":", you might want to set the ","type":"text"},{"type":"codeVoice","code":"listRowBackground"},{"text":" for a clean look like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Form {","   Section {","      PaidStatusView(style: .decorative(icon: .laurel))","         .listRowBackground(Color.accentColor)","   }","   ","   \/\/ ...","}"],"syntax":"swift"},{"level":2,"anchor":"SwiftUI-Previews","type":"heading","text":"SwiftUI Previews"},{"inlineContent":[{"type":"text","text":"For SwiftUI previews to work where you make use of the built-in views or modifier, add a call to "},{"type":"codeVoice","code":".environmentObject(FreemiumKit.preview)"},{"type":"text","text":" in your preview code like so:"}],"type":"paragraph"},{"type":"codeListing","code":["#Preview {","   YourView()","      .environmentObject(FreemiumKit.preview)","}"],"syntax":"swift"},{"inlineContent":[{"text":"If you want to simulate a specific paid state in your previews, you can call the ","type":"text"},{"type":"codeVoice","code":"withOverridesForDebug(purchasedTier:)"},{"text":" function on ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" and set your desired tier (set ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" for full access). The default ","type":"text"},{"type":"codeVoice","code":"FreemiumKit.preview"},{"text":" shows in the “nothing purchased” state, showcasing how things will look from a Free users perspective. For example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["#Preview(\"Full Access\") {","   YourView()","      .environmentObject(FreemiumKit.preview.withOverridesForDebug(purchasedTier: 1))","}"],"syntax":"swift"},{"level":2,"anchor":"Contact","type":"heading","text":"Contact"},{"inlineContent":[{"text":"Have questions or need support? Reach out to me at ","type":"text"},{"identifier":"mailto:freemiumkit@fline.dev","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Legal","type":"heading","text":"Legal"},{"inlineContent":[{"type":"text","text":"Cihat Gündüz © 2024. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Privacy: No personal data is tracked on this site."},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.fline.dev\/imprint\/"}],"type":"small"}],"kind":"content"}],"references":{"Setup-Add-Dependency":{"variants":[{"url":"\/images\/Setup-Add-Dependency.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"Setup-Add-Dependency"},"mailto:freemiumkit@fline.dev":{"type":"link","url":"mailto:freemiumkit@fline.dev","title":"freemiumkit@fline.dev","identifier":"mailto:freemiumkit@fline.dev","titleInlineContent":[{"text":"freemiumkit@fline.dev","type":"text"}]},"https://developer.apple.com/help/app-store-connect/manage-subscriptions/offer-auto-renewable-subscriptions":{"type":"link","url":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","title":"official docs","identifier":"https:\/\/developer.apple.com\/help\/app-store-connect\/manage-subscriptions\/offer-auto-renewable-subscriptions","titleInlineContent":[{"text":"official docs","type":"text"}]},"https://www.fline.dev/imprint/":{"type":"link","url":"https:\/\/www.fline.dev\/imprint\/","title":"Imprint","identifier":"https:\/\/www.fline.dev\/imprint\/","titleInlineContent":[{"text":"Imprint","type":"text"}]},"doc://FreemiumKit/documentation/FreemiumKit/FAQs":{"url":"\/documentation\/freemiumkit\/faqs","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","role":"article","type":"topic","title":"FAQs","abstract":[{"type":"text","text":"The most frequently asked questions about FreemiumKit."}],"identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/FAQs"},"FreemiumKit.png":{"variants":[{"url":"\/images\/FreemiumKit.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"FreemiumKit.png"},"https://www.youtube.com/watch?v=6JxwA3WieHs":{"type":"download","url":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","identifier":"https:\/\/www.youtube.com\/watch?v=6JxwA3WieHs","checksum":null},"doc://FreemiumKit/documentation/Index":{"url":"\/documentation\/index","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"kind":"article","role":"collection","type":"topic","title":"FreemiumKit","abstract":[{"type":"text","text":"Simple In-App Purchases and Subscriptions for Apple Platforms:"},{"type":"text","text":" "},{"type":"text","text":"Automation, Paywalls, A\/B Testing, Live Notifications, PPP, and more."}],"identifier":"doc:\/\/FreemiumKit\/documentation\/Index"},"PaidViews-Poster":{"variants":[{"url":"\/images\/PaidViews-Poster.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"PaidViews-Poster"},"doc://FreemiumKit/documentation/FreemiumKit/MigrateFromPaid":{"url":"\/documentation\/freemiumkit\/migratefrompaid","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn how to migrate from a paid-up-front app to the Freemium model using FreemiumKit in 3 simple steps, while preserving access to your app for those who already purchased."}],"title":"Paid to Freemium Migration Guide","identifier":"doc:\/\/FreemiumKit\/documentation\/FreemiumKit\/MigrateFromPaid","images":[{"identifier":"FreemiumKit.png","type":"icon"}],"type":"topic"},"Setup-PaidStatusView":{"variants":[{"url":"\/images\/Setup-PaidStatusView.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"Setup-PaidStatusView"},"PaidViews":{"variants":[{"url":"\/videos\/PaidViews.mp4","traits":["1x","light"]}],"alt":null,"type":"video","identifier":"PaidViews","poster":"PaidViews-Poster"},"Setup-Add-Package":{"variants":[{"url":"\/images\/Setup-Add-Package.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"Setup-Add-Package"},"Setup-Choose-Package":{"variants":[{"url":"\/images\/Setup-Choose-Package.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"Setup-Choose-Package"}}}